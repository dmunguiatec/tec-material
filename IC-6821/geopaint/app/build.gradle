/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.14.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'checkstyle'
    id "net.ltgt.errorprone" version "3.1.0" // Plugin de Error Prone
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    errorprone 'com.google.errorprone:error_prone_core:2.33.0'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.2'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.17.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.17.2'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.withType(JavaCompile).configureEach {
    // Habilitar Error Prone
    options.errorprone.enabled = true
    options.compilerArgs << "-Xlint:all" // Para warnings adicionales del compilador
}

checkstyle {
    toolVersion = "10.12.0" // versiÃ³n de Checkstyle
    config = resources.text.fromFile("config/checkstyle/checkstyle.xml")
}

tasks.withType(Checkstyle) {
    reports {
        xml.required = false
        html.required = true // Reporte en HTML
    }
}

application {
    // Define the main class for the application.
    mainClass = 'edu.ic6821.geopaint.GeoPaint'
}

test {
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat = "full"
        showStandardStreams = true
    }
}


tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()

}

tasks.named("check") {
    dependsOn "checkstyleMain", "checkstyleTest"
}


